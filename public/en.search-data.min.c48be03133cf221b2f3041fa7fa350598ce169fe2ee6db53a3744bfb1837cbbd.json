[{"id":0,"href":"/docs/quickstart/","title":"Quickstart","section":"Docs","content":" p5.fab Quickstart # Here are a couple of ways to get started with p5.fab.\nOnline Editor # Using Chrome1, open the online editor. Design your artifact! You can start from one of the examples; try changing some of the values in the sketch to see what happens to the resulting object. Physically connect your computer to your fabrication machine2 with a USB cable and click \u0026lsquo;Connect\u0026rsquo;. Start making! Press \u0026lsquo;Print\u0026rsquo; to start streaming commands to your machine. Be sure to keep an eye out for anything that goes wrong; there\u0026rsquo;s no guarantee that your code will \u0026lsquo;work\u0026rsquo; in any conventional sense, but that\u0026rsquo;s part of the fun! Alternative Option: Local Installation # If you\u0026rsquo;d like to use your preferred code editor while using p5.fab:\nDownload the p5.fab.js library file and add the path to the \u0026lt;head\u0026gt; tag of your index.html file:\n\u0026lt;script src=\u0026quot;p5.fab.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\nYou should also add it\u0026rsquo;s dependencies, the p5.js library and the webserial communication:\n\u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/p5@1.9.2/lib/p5.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; Run a local server; this is required for communicating between the machine and your computer. See this guide for details on how to do this!\nOpen your sketch in Chrome1 and start making!\nWe use serial communication to communicate with the machine; Chrome is the only browser which supports WebSerial, which let\u0026rsquo;s us get up and running even quicker!\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nCheck out the Machine Compatability Page for more information on what machines are currently supported.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},{"id":1,"href":"/docs/resources/guides/dfab-intro/","title":"Quickstart","section":"Resources","content":" p5.fab Quickstart # Here are a couple of ways to get started with p5.fab.\nOnline Editor # Using Chrome1, open the online editor. Design your artifact! You can start from one of the examples; try changing some of the values in the sketch to see what happens to the resulting object. Physically connect your computer to your fabrication machine2 with a USB cable and click \u0026lsquo;Connect\u0026rsquo;. Start making! Press \u0026lsquo;Print\u0026rsquo; to start streaming commands to your machine. Be sure to keep an eye out for anything that goes wrong; there\u0026rsquo;s no guarantee that your code will \u0026lsquo;work\u0026rsquo; in any conventional sense, but that\u0026rsquo;s part of the fun! Alternative Option: Local Installation # If you\u0026rsquo;d like to use your preferred code editor while using p5.fab:\nDownload the p5.fab.js library file and add the path to the \u0026lt;head\u0026gt; tag of your index.html file:\n\u0026lt;script src=\u0026quot;p5.fab.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\nYou should also add it\u0026rsquo;s dependencies, the p5.js library and the webserial communication:\n\u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/p5@1.9.2/lib/p5.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; Run a local server; this is required for communicating between the machine and your computer. See this guide for details on how to do this!\nOpen your sketch in Chrome1 and start making!\nWe use serial communication to communicate with the machine; Chrome is the only browser which supports WebSerial, which let\u0026rsquo;s us get up and running even quicker!\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nCheck out the Machine Compatability Page for more information on what machines are currently supported.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},{"id":2,"href":"/docs/resources/guides/quickstart-3/","title":"Quickstart","section":"Resources","content":" p5.fab Quickstart # Here are a couple of ways to get started with p5.fab.\nOnline Editor # Using Chrome1, open the online editor. Design your artifact! You can start from one of the examples; try changing some of the values in the sketch to see what happens to the resulting object. Physically connect your computer to your fabrication machine2 with a USB cable and click \u0026lsquo;Connect\u0026rsquo;. Start making! Press \u0026lsquo;Print\u0026rsquo; to start streaming commands to your machine. Be sure to keep an eye out for anything that goes wrong; there\u0026rsquo;s no guarantee that your code will \u0026lsquo;work\u0026rsquo; in any conventional sense, but that\u0026rsquo;s part of the fun! Alternative Option: Local Installation # If you\u0026rsquo;d like to use your preferred code editor while using p5.fab:\nDownload the p5.fab.js library file and add the path to the \u0026lt;head\u0026gt; tag of your index.html file:\n\u0026lt;script src=\u0026quot;p5.fab.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\nYou should also add it\u0026rsquo;s dependencies, the p5.js library and the webserial communication:\n\u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/p5@1.9.2/lib/p5.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; Run a local server; this is required for communicating between the machine and your computer. See this guide for details on how to do this!\nOpen your sketch in Chrome1 and start making!\nWe use serial communication to communicate with the machine; Chrome is the only browser which supports WebSerial, which let\u0026rsquo;s us get up and running even quicker!\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nCheck out the Machine Compatability Page for more information on what machines are currently supported.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},{"id":3,"href":"/docs/resources/guides/quickstart/","title":"Quickstart","section":"Resources","content":" p5.fab Quickstart # Here are a couple of ways to get started with p5.fab.\nOnline Editor # Using Chrome1, open the online editor. Design your artifact! You can start from one of the examples; try changing some of the values in the sketch to see what happens to the resulting object. Physically connect your computer to your fabrication machine2 with a USB cable and click \u0026lsquo;Connect\u0026rsquo;. Start making! Press \u0026lsquo;Print\u0026rsquo; to start streaming commands to your machine. Be sure to keep an eye out for anything that goes wrong; there\u0026rsquo;s no guarantee that your code will \u0026lsquo;work\u0026rsquo; in any conventional sense, but that\u0026rsquo;s part of the fun! Alternative Option: Local Installation # If you\u0026rsquo;d like to use your preferred code editor while using p5.fab:\nDownload the p5.fab.js library file and add the path to the \u0026lt;head\u0026gt; tag of your index.html file:\n\u0026lt;script src=\u0026quot;p5.fab.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\nYou should also add it\u0026rsquo;s dependencies, the p5.js library and the webserial communication:\n\u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/p5@1.9.2/lib/p5.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; Run a local server; this is required for communicating between the machine and your computer. See this guide for details on how to do this!\nOpen your sketch in Chrome1 and start making!\nWe use serial communication to communicate with the machine; Chrome is the only browser which supports WebSerial, which let\u0026rsquo;s us get up and running even quicker!\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nCheck out the Machine Compatability Page for more information on what machines are currently supported.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},{"id":4,"href":"/docs/machine-compatibility/","title":"Machine Compatibility","section":"Docs","content":" Machine Compatibility # p5.fab is intended to be used with physical machines! In general, it should work with any machine running Marlin firmware. This is the firmware that many companies (e.g. Creality, Prusa, Ultimaker) use, as well as various custom/open-source machines. For more background on machine firmwares, check out the primer. We\u0026rsquo;ve tested p5.fab on the following machines:\nMachine Info Creality Ender3 3D Printer Prusa i3-mk3 3D Printer FLSUN Q9 Delta 3D Printer Potterbot 9 Ceramic 3D Printer Jubilee Toolchanging Machine While most of these are 3D printers, we are working on extending control to Plotters (like the AxiDraw) and CNC machines (like the Othermill). Stay tuned!\n"},{"id":5,"href":"/docs/resources/","title":"Resources","section":"Docs","content":" Resources # Here you\u0026rsquo;ll find some resources for using p5.fab, including guides which introduce key concepts, tutorials which put these concepts into practice, and examples to motivate more uses!\nThe resources here are growing; if there\u0026rsquo;s something you\u0026rsquo;d like to see added or contribute, reach out on github!\nGuides # A Gentle Introduction to Digital Fabrication # A (very!) brief overview of some key digital fabrication concepts, including: G-Code, coordinate systems, machines, and their firmware. Intended for anyone new to using machines like 3D printers.\nA Gentle Introduction to Creative Code # A (very!) brief overview of some key creative coding concepts, including: how to sketch with p5.js. Intended for anyone new to creative coding.\np5.fab Primer # An overview of the p5.fab library!\nTutorials # Printing a cube # A first 3D printed object with p5.fab!\nNon-Planar 3D Printing # Putting the \u0026lsquo;3D\u0026rsquo; in 3D printing.\nLine Vase 3D Print # Tuning printing parameters to create delicate structures.\nExamples # more examples to come!\n"}]